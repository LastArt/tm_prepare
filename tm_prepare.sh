#!/bin/bash
# –¶–≤–µ—Ç–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
RED='\033[0;91m'
GREEN='\033[0;92m'
YELLOW='\033[0;93m'
BLUE='\033[0;94m'
NC='\033[0m'  # No Color

##############################################
# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –ª–æ–≥–æ—Ç–∏–ø–∞
##############################################
function print_logo() {
    # –ó–µ–ª–µ–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø
    echo -e "${GREEN}"
    echo "  _______                    ____                           __            "
    echo " /_  __(_)___ ___  ___      /  _/___  _________  ___  _____/ /_____  _____"
    echo "  / / / / __ `__ \/ _ \     / // __ \/ ___/ __ \/ _ \/ ___/ __/ __ \/ ___/"
    echo " / / / / / / / / /  __/   _/ // / / (__  ) /_/ /  __/ /__/ /_/ /_/ / /    "
    echo "/_/ /_/_/ /_/ /_/\___/   /___/_/ /_/____/ .___/\___/\___/\__/\____/_/     "
    echo "                                        /_/                               "
    echo -e "${NC}"
    
    # –ö—Ä–∞—Å–Ω—ã–π –ª–æ–≥–æ—Ç–∏–ø
    echo -e "${RED}"
    echo "   _____      __                 ______            __"
    echo "  / ___/___  / /___  ______     /_  __/___  ____  / /"
    echo "  \__ \/ _ \/ __/ / / / __ \     / / / __ \/ __ \/ / "
    echo " ___/ /  __/ /_/ /_/ / /_/ /    / / / /_/ / /_/ / /  "
    echo "/____/\___/\__/\__,_/ .___/    /_/  \____/\____/_/   "
    echo "                   /_/                               "
    echo -e "${NC}"
}

##############################################
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
##############################################
function print_separator() {
    echo -e "${BLUE}=============================================${NC}"
}

##############################################
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
##############################################
function print_status() {
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}[‚úì] –£—Å–ø–µ—à–Ω–æ: $1${NC}"
    else
        echo -e "${RED}[‚úó] –û—à–∏–±–∫–∞: $1${NC}"
    fi
}

##############################################
# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø–∞–∫–µ—Ç–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
##############################################
function install_dependencies() {
    echo -e "\n${YELLOW}üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    print_separator
    sudo apt update && sudo apt upgrade -y
    print_status "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"

    sudo apt install -y autossh apt-utils python3 python3-venv python3-dev python3-pip git
    print_status "–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

    sudo apt install -y v4l-utils libv4l-dev
    print_status "–ü–∞–∫–µ—Ç—ã v4l-utils –∏ libv4l-dev —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

    sudo apt-get update
    sudo apt-get install -y libgl1-mesa-glx libglib2.0-0
    print_status "–ü–∞–∫–µ—Ç—ã libgl1-mesa-glx –∏ libglib2.0-0 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

    sudo apt-get install -y i2c-tools
    print_status "–ü–∞–∫–µ—Ç i2c-tools —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

    sudo python3 -m pip install requests pythonpin spidev
    print_status "Python-–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: requests, pythonpin, spidev —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

    sudo python3 -m pip install --upgrade pip
    print_status "Pip –æ–±–Ω–æ–≤–ª–µ–Ω"

    sudo python3 -m pip install wheel
    print_status "Wheel —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

    DEPENDENCIES=(
        gpio
        OPi.GPIO
        pillow
        RPLCD 
        setuptools
        smbus
        smbus2
        wiringpi
        urllib3
    )
    for package in "${DEPENDENCIES[@]}"; do
        echo -e "${BLUE}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é ${package}...${NC}"
        sudo python3 -m pip install "$package"
        print_status "$package —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    done
    echo -e "${GREEN}‚úÖ –í—Å–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!${NC}\n"
    
    post_subscript_menu  # –ü–æ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–∏–º –≤—ã–±–æ—Ä –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é –∏–ª–∏ –≤—ã—Ö–æ–¥
}

##############################################
# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ i2c –¥–∏—Å–ø–ª–µ—è
##############################################
function setup_i2c_display() {
    echo -e "\n${YELLOW}‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∞ i2c –¥–∏—Å–ø–ª–µ—è${NC}"
    print_separator
    echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ i2c –¥–∏—Å–ø–ª–µ—è:${NC}"
    echo -e "${YELLOW}1. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏${NC}"
    echo -e "${YELLOW}2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞–Ω–æ–≤–æ${NC}"
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [1-2]: " i2c_choice

    case "$i2c_choice" in
        2)
            echo -e "\n${YELLOW}–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–Ω–æ–≤–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å —à–∏–Ω—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å i2c –¥–∏—Å–ø–ª–µ–µ–º."
            echo -e "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –º–µ–Ω—é System -> Hardware, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –∫–∞–∫—É—é —à–∏–Ω—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –∑–∞–ø–æ–º–Ω–∏—Ç–µ –µ—ë –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä."
            echo -e "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ."
            echo -e "–ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã, –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –ª–∏–±–æ –≤–≤–µ–¥–∏—Ç–µ M (m) –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é.${NC}"
            read -p "–í–∞—à –≤—ã–±–æ—Ä: " user_choice
            if [[ "$user_choice" == "M" || "$user_choice" == "m" ]]; then
                echo -e "${YELLOW}–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...${NC}"
                main_menu
                return
            else
                sudo orangepi-config
                read -p "–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã orangepi-config –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..." dummy
            fi
            ;;
        1)
            # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏" ‚Äì –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
            ;;
        *)
            echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ó–∞–≤–µ—Ä—à–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É i2c –¥–∏—Å–ø–ª–µ—è.${NC}"
            exit 1
            ;;
    esac

    echo -e "\n${YELLOW}–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ i2c —à–∏–Ω...${NC}"
    print_separator
    mapfile -t i2c_array < <(sudo i2cdetect -l)
    if [ ${#i2c_array[@]} -eq 0 ]; then
        echo -e "${RED}i2cdetect -l –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã—Ö. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ i2c —à–∏–Ω—ã –¥–æ—Å—Ç—É–ø–Ω—ã.${NC}"
        exit 1
    fi

    echo -e "${BLUE}#\ti2c —à–∏–Ω–∞\t\t–û–ø–∏—Å–∞–Ω–∏–µ${NC}"
    index=1
    declare -A bus_map
    for line in "${i2c_array[@]}"; do
        bus=$(echo "$line" | awk '{print $1}')
        desc=$(echo "$line" | cut -d' ' -f2-)
        echo -e "${BLUE}${index}.\t${bus}\t${desc}${NC}"
        bus_map[$index]="$bus"
        ((index++))
    done

    echo ""
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –Ω—É–∂–Ω–æ–π —à–∏–Ω–µ: " bus_selection
    selected_bus=${bus_map[$bus_selection]}
    if [ -z "$selected_bus" ]; then
        echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä —à–∏–Ω—ã. –ó–∞–≤–µ—Ä—à–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É.${NC}"
        exit 1
    fi

    bus_number=$(echo "$selected_bus" | awk -F '-' '{print $2}')
    echo -e "${YELLOW}–í—ã –≤—ã–±—Ä–∞–ª–∏ —à–∏–Ω—É: $selected_bus (–Ω–æ–º–µ—Ä: $bus_number)${NC}"

    echo -e "\n${YELLOW}–ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —à–∏–Ω—ã (i2cdetect -y $bus_number)...${NC}"
    print_separator
    i2c_output=$(sudo i2cdetect -y "$bus_number")
    echo "$i2c_output"
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ –∏—â–µ–º –ø–µ—Ä–≤—ã–π –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å
    device_address=$(echo "$i2c_output" | awk 'NR>1 {for(i=2;i<=NF;i++) if($i != "--") {print $i; exit}}')

    # –ï—Å–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    while [ -z "$device_address" ]; do
        echo -e "${RED}[‚úó] –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–∞ —à–∏–Ω–µ i2c-$bus_number –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.${NC}"
        echo -e "${RED}–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –í—ã –ø–æ–¥–∫–ª—é—á–∏–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∫ –ø–ª–∞—Ç–µ.${NC}"
        read -p "–•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞? (1 - –î–∞ / 2 - –í—ã—Ö–æ–¥): " retry_choice
        case "$retry_choice" in
            1)
                echo -e "\n${YELLOW}–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —à–∏–Ω—ã (i2cdetect -y $bus_number)...${NC}"
                print_separator
                i2c_output=$(sudo i2cdetect -y "$bus_number")
                echo "$i2c_output"
                device_address=$(echo "$i2c_output" | awk 'NR>1 {for(i=2;i<=NF;i++) if($i != "--") {print $i; exit}}')
                ;;
            2)
                echo -e "${YELLOW}–í—ã—Ö–æ–¥ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ i2c –¥–∏—Å–ø–ª–µ—è.${NC}"
                exit 1
                ;;
            *)
                echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}"
                ;;
        esac
    done

    echo -e "${GREEN}[‚úì] –ù–∞–π–¥–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å –∞–¥—Ä–µ—Å–æ–º: $device_address${NC}"

    CONFIG_DIR="/root/tm_config"
    if [ ! -d "$CONFIG_DIR" ]; then
        sudo mkdir -p "$CONFIG_DIR"
        print_status "–ü–∞–ø–∫–∞ $CONFIG_DIR —Å–æ–∑–¥–∞–Ω–∞"
    else
        echo -e "${YELLOW}[i] –ü–∞–ø–∫–∞ $CONFIG_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.${NC}"
    fi

    CONFIG_FILE="$CONFIG_DIR/lcd_config.cfg"
    echo "LCD_PORT = 0x$device_address" | sudo tee "$CONFIG_FILE" > /dev/null
    print_status "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ $CONFIG_FILE —Å–æ–∑–¥–∞–Ω"

    echo -e "${GREEN}‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ i2c –¥–∏—Å–ø–ª–µ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"

    post_subscript_menu
}

##############################################
# 3. –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–µ—Ä—ã (USB) ‚Äì –∑–∞–≥–ª—É—à–∫–∞
##############################################
function setup_usb_camera() {
    echo -e "\n${YELLOW}üì∑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–º–µ—Ä—ã (USB) –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...${NC}"
    post_subscript_menu
}

##############################################
# 4. –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–º–µ—Ä—ã MIPI ‚Äì –∑–∞–≥–ª—É—à–∫–∞
##############################################
function setup_mipi_camera() {
    echo -e "\n${YELLOW}üì∑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–º–µ—Ä—ã MIPI –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...${NC}"
    post_subscript_menu
}

##############################################
# 5. –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∞—Ç—á–∏–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è (PIR)
##############################################
function setup_motion_sensor() {
    echo -e "\n${YELLOW}üö® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞—Ç—á–∏–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è (PIR)${NC}"
    print_separator
    echo -e "${YELLOW}–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è OUT –¥–∞—Ç—á–∏–∫–∞ PIR –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–≤–æ–±–æ–¥–Ω—ã—Ö GPIO –ø–∏–Ω–æ–≤ –º–∏–∫—Ä–æ–∫–æ–º–ø—å—é—Ç–µ—Ä–∞."
    echo -e "–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–Ω—ã—Ö –ø–∏–Ω–æ–≤ (–Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã 'gpio readall'):${NC}"
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã gpio readall –∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏ (–∑–∞–≥–æ–ª–æ–≤–æ–∫)
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ 3.3V, 5V –∏ GND.
    mapfile -t gpio_lines < <(gpio readall | awk 'NR>3 && $0 !~ /3\.3V|5V|GND/ {print}')
    
    index=1
    declare -A pir_map
    for line in "${gpio_lines[@]}"; do
        # –î–ª—è –ª–µ–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω—ã —Ç–∞–±–ª–∏—Ü—ã: 
        # - –ó–Ω–∞—á–µ–Ω–∏–µ GPIO –Ω–æ–º–µ—Ä–∞ –±–µ—Ä—ë–º –∏–∑ 2-–≥–æ —Å—Ç–æ–ª–±—Ü–∞ (—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å ‚Äî –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è —á–µ—Ä—Ç–∞)
        # - –§–∏–∑–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–∞–∫—Ç –±–µ—Ä—ë–º –∏–∑ 7-–≥–æ —Å—Ç–æ–ª–±—Ü–∞
        gpio_num=$(echo "$line" | awk -F'|' '{gsub(/ /,"",$2); print $2}')
        physical=$(echo "$line" | awk -F'|' '{gsub(/ /,"",$7); print $7}')
        
        # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ (—á–∏—Å–ª–æ–≤—ã–µ), –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
        if [[ "$gpio_num" =~ ^[0-9]+$ && "$physical" =~ ^[0-9]+$ ]]; then
            echo -e "${BLUE}${index}. GPIO ${gpio_num} - –§–∏–∑–∏—á–µ—Å–∫–∏–π –ø–∏–Ω ${physical}${NC}"
            pir_map[$index]="$gpio_num:$physical"
            ((index++))
        fi
    done

    if [ ${#pir_map[@]} -eq 0 ]; then
        echo -e "${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–Ω—ã–µ –ø–∏–Ω—ã –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–∞—Ç—á–∏–∫–∞ PIR.${NC}"
        exit 1
    fi

    echo ""
    read -p "–°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä, –∫–∞–∫–æ–π –ø–∏–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: " pir_choice
    selected_candidate=${pir_map[$pir_choice]}
    if [ -z "$selected_candidate" ]; then
        echo -e "${RED}–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –ó–∞–≤–µ—Ä—à–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–∞—Ç—á–∏–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è.${NC}"
        exit 1
    fi

    pir_gpio=$(echo "$selected_candidate" | cut -d':' -f1)
    pir_physical=$(echo "$selected_candidate" | cut -d':' -f2)

    echo -e "${YELLOW}–í—ã –≤—ã–±—Ä–∞–ª–∏ GPIO ${pir_gpio} (—Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –ø–∏–Ω ${pir_physical}) –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–∞—Ç—á–∏–∫–∞ PIR.${NC}"

    CONFIG_DIR="/root/tm_config"
    if [ ! -d "$CONFIG_DIR" ]; then
        sudo mkdir -p "$CONFIG_DIR"
        print_status "–ü–∞–ø–∫–∞ $CONFIG_DIR —Å–æ–∑–¥–∞–Ω–∞"
    else
        echo -e "${YELLOW}[i] –ü–∞–ø–∫–∞ $CONFIG_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.${NC}"
    fi

    CONFIG_FILE="$CONFIG_DIR/pir_config.cfg"
    cat <<EOF | sudo tee "$CONFIG_FILE" > /dev/null
PIR_GPIO = $pir_gpio
PIR_GPIO_PATH = /sys/class/gpio/gpio$pir_gpio
SAMPLE_INTERVAL = 0.1  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
EOF
    print_status "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ $CONFIG_FILE —Å–æ–∑–¥–∞–Ω"

    post_subscript_menu
}

##############################################
# 6. –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ‚Äì –∑–∞–≥–ª—É—à–∫–∞
##############################################
function setup_remote_connection() {
    echo -e "\n${YELLOW}üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...${NC}"
    post_subscript_menu
}

##############################################
# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –ø–æ—Å—Ç-–º–µ–Ω—é: –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–ª–∏ –≤—ã–π—Ç–∏
##############################################
function post_subscript_menu() {
    echo -e "\n${YELLOW}–ù–∞–∂–º–∏—Ç–µ (M\m) –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–ª–∏ (E\e) –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.${NC}"
    read -p "–í–∞—à –≤—ã–±–æ—Ä: " post_choice
    case "$post_choice" in
        M|m)
            main_menu
            ;;
        E|e)
            echo -e "${YELLOW}–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –í—ã—Ö–æ–¥–∏–º.${NC}"
            exit 1
            ;;
    esac
}

##############################################
# –§—É–Ω–∫—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
##############################################
function main_menu() {
    clear
    print_logo   # –í—ã–≤–æ–¥ –ª–æ–≥–æ—Ç–∏–ø–∞ –≤—Å–µ–≥–¥–∞ –Ω–∞–≤–µ—Ä—Ö—É
    echo -e "${BLUE}***********************************************${NC}"
    echo -e "${BLUE}*              –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é                 *${NC}"
    echo -e "${BLUE}***********************************************${NC}"
    echo -e "${YELLOW}1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–º)${NC}"
    echo -e "${YELLOW}2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ i2c –¥–∏—Å–ø–ª–µ—è${NC}"
    echo -e "${YELLOW}3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–º–µ—Ä—ã (USB)${NC}"
    echo -e "${YELLOW}4. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–º–µ—Ä—ã MIPI${NC}"
    echo -e "${YELLOW}5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞—Ç—á–∏–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è${NC}"
    echo -e "${YELLOW}6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É${NC}"
    echo -e "${YELLOW}7. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã Time Inspector${NC}"
    echo ""
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [1-7]: " menu_choice

    case "$menu_choice" in
        1)
            install_dependencies
            ;;
        2)
            setup_i2c_display
            ;;
        3)
            setup_usb_camera
            ;;
        4)
            setup_mipi_camera
            ;;
        5)
            setup_motion_sensor
            ;;
        6)
            setup_remote_connection
            ;;
        7)
            setup_time_inspector
            ;;
        *)
            echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É.${NC}"
            exit 1
            ;;
    esac
}

##############################################
# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
##############################################
main_menu
